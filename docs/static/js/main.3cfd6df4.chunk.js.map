{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","className","onChange","e","target","type","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cfd6df4.chunk.js","sourcesContent":["import IonIcon from \"@reacticons/ionicons\"\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setTodos([\r\n            ...todos, { text: inputText, completed: false, id: Math.random() * 1000 }\r\n        ])\r\n    }\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} className=\"todo-input\" onChange={inputTextHandler} type=\"text\" />\r\n            <button className=\"todo-button\" onClick={submitTodoHandler} type=\"submit\">\r\n                <IonIcon name=\"add\"></IonIcon>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import IonIcon from \"@reacticons/ionicons\"\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return { ...item, completed: !item.completed }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <div className=\"btn-group\">\r\n                <button onClick={completeHandler} className=\"complete-btn\">\r\n                    {todo.completed ? <IonIcon name=\"checkmark\" /> : <IonIcon name=\"crop-outline\" />}\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                    <IonIcon name=\"trash-outline\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo => (\r\n                    <Todo key={todo.id} text={todo.text} todo={todo} todos={todos} setTodos={setTodos} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => !todo.completed));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      const todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header>\n          <h1>Happy Todolist !!!</h1>\n        </header>\n        <Form\n          inputText={inputText}\n          setInputText={setInputText}\n          todos={todos}\n          setTodos={setTodos}\n          setStatus={setStatus}\n        />\n        <TodoList\n          filteredTodos={filteredTodos}\n          todos={todos}\n          setTodos={setTodos}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}